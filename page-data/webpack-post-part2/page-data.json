{
    "componentChunkName": "component---src-templates-blogs-post-js",
    "path": "/webpack-post-part2/",
    "result": {"data":{"markdownRemark":{"excerpt":"Empezando con  webpack. Parte #2 En la parte 1 vimos los conceptos que b√°sicos de Webpack para ir empezando, una vez los comprendas puedes‚Ä¶","html":"<h1>Empezando con <img width=\"50\" align=\"center\" src=\"https://www.vectorlogo.zone/logos/js_webpack/js_webpack-icon.svg\"> webpack. Parte #2</h1>\n<p>En la parte 1 vimos los conceptos que b√°sicos de Webpack para ir empezando, una vez los comprendas puedes empezar tranquilo. En est√° ocasi√≥n crearemos un proyecto para conocer la estructura con la que Webpack trabaja.</p>\n<h2>Creando e iniciando el proyecto</h2>\n<ol>\n<li>\n<p>Como primer paso crearemos nuestra carpeta, yo la llamare <code class=\"language-text\">pracica-webpack</code>.</p>\n</li>\n<li>\n<p>La abrimos es <strong>vs code</strong>, y abrimos una nueva terminal e iniciamos un proyecto con node con el siguiente comando:</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init -y</code></pre></div>\n<blockquote>\n<p>Al ejecutar el comando generar√° el <code class=\"language-text\">package.json</code> con las configuraciones por defecto, puedes encontrar m√°s informaci√≥n en <a href=\"https://docs.npmjs.com/cli/v6/commands/npm-init\">npm-init</a>.</p>\n</blockquote>\n<h2>üì¶ Instalando paquetes</h2>\n<p>Ahora instalaremos los paquetes que necesitamos. La mayor√≠a de paquetes que Webpack necesita se instalan como dependencias de desarrollo, como una buena practica.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> webpack webpack-cli -D</code></pre></div>\n<blockquote>\n<p>Desde la versi√≥n 4 de webpack es necesario instalar <a href=\"https://webpack.js.org/guides/installation/\">webpack-cli</a> que significa <a href=\"https://webpack.js.org/api/cli/\">Command Line Interface</a>. El cli   ofrece comandos para facilitar la configuraci√≥n de webpack. El <code class=\"language-text\">-D</code> es para instalarlo como <a href=\"https://docs.npmjs.com/cli/v6/commands/npm-install\">dependencia de desarrollo</a> que es la manera m√°s optimizada para trabajar en un proyecto que utiliza webpack.</p>\n</blockquote>\n<h2>Creando archivos</h2>\n<p>Ahora crearemos los archivos que vamos a utilizar:</p>\n<div class=\"gatsby-highlight\" data-language=\"treeview\"><pre class=\"language-treeview\"><code class=\"language-treeview\"><span class=\"token entry-dir\">root/</span>\r\n<span class=\"token entry-line line-h\">‚îú‚îÄ‚îÄ </span><span class=\"token entry-dir\">src/</span>\r\n<span class=\"token entry-line line-v\">‚îÇ   </span><span class=\"token entry-line line-v-last\">‚îî‚îÄ‚îÄ </span><span class=\"token entry-name\">index.js</span>\r\n<span class=\"token entry-line line-h\">‚îú‚îÄ‚îÄ </span><span class=\"token entry-name\">index.html</span>\r\n<span class=\"token entry-line line-h\">‚îú‚îÄ‚îÄ </span><span class=\"token entry-name\">webpack.config.js</span></code></pre></div>\n<p>En la carpeta <code class=\"language-text\">index.html</code> agregamos una estructura simple de HTML y agregamos un script</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./dist/main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>En el <code class=\"language-text\">index.js</code> escribes una simple funci√≥n y unos <code class=\"language-text\">console.log()</code>, para ir empezando.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Script para ejecutar Webpack</h2>\n<p>Desde la versi√≥n 4.0.0 Webpack ya no requiere un archivo de configuraci√≥n, aun que es recomendable agregarle uno. Para iniciar lo utilizaremos solo con un comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx webpack --mode development</code></pre></div>\n<p>El comando anterior toma el archivo <code class=\"language-text\">./src/index.js</code>  que creamos y lo empaquetara en un archivo llamado <code class=\"language-text\">dist/main.js</code> el cual puedes ver que posee comentarios y encontraras tu c√≥digo escrito de una forma diferente. Si se omite el <code class=\"language-text\">--mode</code> Webpack tendr√° por defecto el modo <code class=\"language-text\">production</code> que empaquetara el mismo archivo pero mas peque√±o.</p>\n<p>Pero ejecutando Webpack de esta forma se desperdicia potencial y es poco c√≥modo. Lo correcto seria crear un script en el <code class=\"language-text\">package.json</code> y un archivo de configuraci√≥n para Webpack. El script del <code class=\"language-text\">package.json</code> seria el siguiente:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token string\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack\"</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2>Configurando Webpack</h2>\n<p>En el archivo <code class=\"language-text\">webpack.config.js</code> es el encargado de la configuraci√≥n que Webpack utilizara, le diremos que plugins utilizar, como llamara a los archivos y que optimizaciones utilizaremos si queremos. Por ahora con los conceptos vistos en la parte 1 de Webpack empezaremos por la entrada y salida del empaquetado de un simple <code class=\"language-text\">js</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Modulo nativo de node</span>\r\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// Definimos el punto de entrada de la aplicaci√≥n</span>\r\n\tentry<span class=\"token operator\">:</span> <span class=\"token string\">'./index.js'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token comment\">// Definimos la ubicaci√≥n en donde enviara los archivos empaquetados</span>\r\n\toutput<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// El nombre que tendra nuestro archivo</span>\r\n\t\tfilename<span class=\"token operator\">:</span> <span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token comment\">// Con path le diremos donde queremos que ubique todo el proyecto</span>\r\n\t\tpath<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token comment\">// Modo en que se empaquetara</span>\r\n\tmode<span class=\"token operator\">:</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As√≠ seria la configuraci√≥n b√°sica para empezar con Webpack.  En <code class=\"language-text\">entry</code> le estamos diciendo que tome el archivo <code class=\"language-text\">index.js</code> de la ra√≠z  y en la salida genere un archivo <code class=\"language-text\">bundle.js</code> tambi√©n en la ra√≠z (si se omite la propiedad <code class=\"language-text\">path</code> Webpack generara el archivo en una carpeta llamada <code class=\"language-text\">dist</code>), y por ultimo el modo en que Webpack transformara el c√≥digo del archivo, que es en modo <code class=\"language-text\">production</code>. El modulo que se utilizara es <a href=\"https://nodejs.org/api/path.html\">Path</a> que es un modulo nativo de node y se utiliza para trabajar con rutas de archivos y directorios.</p>\n<p>Ahora ya puedes ejecutar el script <code class=\"language-text\">npm start</code> y veras que crea una carpeta llamada <code class=\"language-text\">dist</code> que contiene el archivo <code class=\"language-text\">bundle.js</code> con el c√≥digo transformado.</p>\n<p>Para ponerlo aprueba debes de agregar la ruta del archivo a tu <code class=\"language-text\">index.html</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./dist/bundle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Puedes ver el archivo <code class=\"language-text\">bundle.js</code> como a transformado el c√≥digo que escribimos al inicio:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Como puedes ver lo a comprimido para hacerlo de m√°s coroto y eficiente.</p>","frontmatter":{"title":"Empezando con webpack. Parte #2","date":"November 18, 2020","description":"Configuraci√≥n ba√≠ca para empezar un poryecto de react, para css, imagenes y contenido en general."}}},"pageContext":{"slug":"/webpack-post-part2/","previous":{"fields":{"slug":"/webpack-post-part1/"},"frontmatter":{"title":"Empezando con webpack. Parte #1","categories":["webpack","react"]}},"next":{"fields":{"slug":"/webpack-post-part3/"},"frontmatter":{"title":"Empezando con webpack. Parte #3","categories":["webpack","react"]}}}},
    "staticQueryHashes": []}