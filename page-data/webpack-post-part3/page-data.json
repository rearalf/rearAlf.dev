{
    "componentChunkName": "component---src-templates-blogs-post-js",
    "path": "/webpack-post-part3/",
    "result": {"data":{"markdownRemark":{"excerpt":"Empezando con img Webpack. Parte #3 Como ya vimos en las partes anteriores, ya tenemos un archivo de configuración con las partes para…","html":"<h1>Empezando con <img src=\"https://www.vectorlogo.zone/logos/js_webpack/js_webpack-icon.svg\" alt=\"img\"> Webpack. Parte #3</h1>\n<p>Como ya vimos en las partes anteriores, ya tenemos un archivo de configuración con las partes para empezar a utilizar JavaScript. Aun que Webpack pueda tomar el código JavaScript y comprimirlo, puede que tu utilices una forma más moderna de JavaScript que los navegadores no tengan aun, y es ahí donde entra Babel.</p>\n<h2>Antes de empezar</h2>\n<p>Utilizaremos la misma estructura de la parte anterior con los mismos archivos y su contenido. Todo esto para poder continuar con la configuración agregándole nuevas características. Los archivos que se agregarán, para avanzar, ya están marcados.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"treeview\"><pre class=\"language-treeview\"><code class=\"language-treeview\"><span class=\"token entry-dir\">root/</span>\r\n<span class=\"token entry-line line-h\">├── </span><span class=\"token entry-dir\">src/</span>\r\n<span class=\"token entry-line line-v\">|   </span><span class=\"token entry-line line-v-last\">└── </span><span class=\"token entry-name\">index.js</span>\r\n<span class=\"gatsby-highlight-code-line\"><span class=\"token entry-line line-h\">├── </span><span class=\"token entry-name\">.babelrc</span>\r</span><span class=\"token entry-line line-h\">├── </span><span class=\"token entry-name\">.gitignore</span>\r\n<span class=\"token entry-line line-h\">├── </span><span class=\"token entry-name\">index.html</span>\r\n<span class=\"token entry-line line-h\">├── </span><span class=\"token entry-name\">package-lock.json</span>\r\n<span class=\"token entry-line line-h\">├── </span><span class=\"token entry-name\">package.json</span>\r\n<span class=\"token entry-line line-h\">├── </span><span class=\"token entry-name\">README.md</span>\r\n<span class=\"token entry-line line-h\">├── </span><span class=\"token entry-name\">webpack.config.js</span></code></pre></div>\n<h2>Babel Loader</h2>\n<h3>¿Qué es Babel?</h3>\n<p>Babel es un conjunto de herramientas que se utilizan para convertir JavaScript moderno a una versión mas compatible con los navegadores o entornos en donde se ejecuten.</p>\n<p>Principales habilidades de Babel:</p>\n<ul>\n<li>Transformar la sintaxis.</li>\n<li>Características de <a href=\"https://developer.mozilla.org/es/docs/Glossary/Polyfill\">Polyfill</a> que faltan en su entorno de destino.</li>\n<li>Transformación de código fuente.</li>\n</ul>\n<h3>Instalación</h3>\n<p>Para empezar a utilizarlo junto con Webpack, se debe de instalar una serie de complementos, unos como dependencia de desarrollo y otros como dependencia de producción:</p>\n<ul>\n<li>\n<p>Dependencias de desarrollo</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> i -D babel-loader @babel/core @babel/preset-env @babel/plugin-transform-runtime</code></pre></div>\n</li>\n<li>\n<p>Dependencias de producción</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> i @babel/runtime</code></pre></div>\n</li>\n<li>\n<p><strong>babel-loader</strong>: Es el modulo a utilizar para trabajar con Webpack.</p>\n</li>\n<li>\n<p><strong>@babel/core</strong>: Es el corazón de todo babel.</p>\n</li>\n<li>\n<p><strong>@babel/preset-env</strong>: Nos ayudara a trabajar con JavaScript moderno.</p>\n</li>\n<li>\n<p><strong>@babel/plugin-transform-runtime</strong>: Nos ayuda a trabajar con asincronismo.</p>\n</li>\n<li>\n<p><strong>@babel/runtime</strong>: Se utiliza para que funcione el plugins anterior. Se debe de instalar como dependencia de producción según la documentación de babel.</p>\n</li>\n</ul>\n<h3>Configuración</h3>\n<p>Luego de haber instalado todo, procedemos a crear en la raíz del proyecto un nuevo archivo llamado <code class=\"language-text\">.babelrc</code>, por si no lo sabias el significado del <a href=\"#punto-al-inicio\">punto al inicio</a>. Dicho archivo tiene formato JSON.</p>\n<p>La primera configuración que agregaremos será los <code class=\"language-text\">presets</code>, que contiene un arreglo de plugin que nos ayuda a transformar nuestro código JavaScript a una versión más compatible con la mayoría de navegadores. Luego esta la sección de <code class=\"language-text\">plugins</code> que agrega mejoras en el rendimiento, o  comprimiendo ciertas partes del código para mayor eficiencia del proyecto.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\r\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"@babel/preset-env\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"@babel/plugin-transform-runtime\"</span> <span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Y finalizando la configuración agregaremos al archivo <code class=\"language-text\">webpack.config.js</code> una reglas en la sección de módulos para que Webpack sepa que utilizar para transformar nuestro código JavaScript.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n<span class=\"gatsby-highlight-code-line\"> \tmodule<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r</span><span class=\"gatsby-highlight-code-line\">        rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r</span><span class=\"gatsby-highlight-code-line\">    \t\t<span class=\"token punctuation\">{</span>\r</span><span class=\"gatsby-highlight-code-line\">                <span class=\"token comment\">// Se encarga de buscar en todo el directorio los archivos que le indica la expresión regular</span>\r</span><span class=\"gatsby-highlight-code-line\">                test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\r</span><span class=\"gatsby-highlight-code-line\">                <span class=\"token comment\">// La carpeta que debe de excluir</span>\r</span><span class=\"gatsby-highlight-code-line\">                exclude<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\r</span><span class=\"gatsby-highlight-code-line\">                <span class=\"token comment\">// Para indicarle el loader que webpack debe de usar</span>\r</span><span class=\"gatsby-highlight-code-line\">                use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r</span><span class=\"gatsby-highlight-code-line\">                    loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span>\r</span><span class=\"gatsby-highlight-code-line\">                <span class=\"token punctuation\">}</span>\r</span><span class=\"gatsby-highlight-code-line\">            <span class=\"token punctuation\">}</span>\r</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">]</span>        \r</span><span class=\"gatsby-highlight-code-line\">   <span class=\"token punctuation\">}</span>\r</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Probando</h2>\n<p>Como primer paso para ver si funciona nuestra nueva configuración de Webpack ya integrando Babel a nuestro proyecto, utilizaremos <strong>Arrow function</strong> que es una característica de ES6.</p>\n<p>Tomando el archivo <code class=\"language-text\">src/index.js</code> crearemos dos funciones, una llamada <code class=\"language-text\">sum</code> y otra llamada <code class=\"language-text\">calc</code> en ambas pasaremos parametros. En la funci+on <code class=\"language-text\">calc</code> pasaremos un <a href=\"#Callback\">callback</a> ademas de los dos números que necesitamos. En la función <code class=\"language-text\">sum</code> es igual.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calc</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r</span><span class=\"gatsby-highlight-code-line\">\t<span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r</span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r</span><span class=\"gatsby-highlight-code-line\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Al ejecutar el script Webpack con la ayuda de Babel tomara el archivo y lo transformara a una función normal si es necesario o en este caso dará la respuesta de forma simple.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Definiciones</h2>\n<h3>Punto al inicio <a name=\"punto-al-inicio\"></a></h3>\n<p>El <em>punto</em> al inicio del nombre del archivo es para que el sistema lo oculte por defecto, pero aunque no sea visible el proyecto siempre va a poder acceder a él. Dentro del archivo se debe de configurar en formato.</p>\n<h3>Callback <a name=\"Callback\"></a></h3>\n<p>En Javascript un callback es cuando se asigna una función como parametro de otra función. Más información <a href=\"https://www.ionos.es/digitalguide/paginas-web/desarrollo-web/que-es-un-callback/\">Callback: ¿qué son las funciones callback?</a></p>\n<h2>Bibliografía</h2>\n<p><a href=\"https://babeljs.io/\">Babel</a>.</p>\n<p><a href=\"https://desarrolloweb.com/articulos/transpilado-javascript-webpack.html\">transpilado javascript webpack</a>.</p>","frontmatter":{"title":"Empezando con webpack. Parte #3","date":"February 25, 2021","description":"Configuración baíca para babel y poder convertir el código ECMAScript 2015+ en una versión de JavaScript compatible con versiones anteriores en navegadores."}}},"pageContext":{"slug":"/webpack-post-part3/","previous":{"fields":{"slug":"/webpack-post-part2/"},"frontmatter":{"title":"Empezando con webpack. Parte #2","categories":["webpack","react"]}},"next":{"fields":{"slug":"/webpack-post-part4/"},"frontmatter":{"title":"Empezando con webpack. Parte #4","categories":["webpack","react"]}}}},
    "staticQueryHashes": []}